<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAADAwPdAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AwMD3QAAAP8DAwP/FxcW/xoaGf8aGhn/GhoZ/xoaGf8aGhn/GhoZ/xoaGf8aGhn/GhoZ/xoa
        Gf8aGhn/GhoZ/xoaGf8aGhn/GhoZ/xoaGf8aGhn/GhoZ/xoaGf8aGhn/GhoZ/xoaGf8aGhn/GhoZ/xoa
        Gf8aGhn/FxcW/wMDA/8AAAD/AAAA/xcXFv+sqaL/xcG5/8PAuP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PA
        uP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PA
        uP/DwLj/w8C4/8XBuf+sqaL/FxcW/wAAAP8AAAD/FxcW/6ypov/Fwbn/w8C4/8PAuP/DwLj/w8C4/8PA
        uP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PAuP/DwLj/w8C4/8PA
        uP/DwLj/w8C4/8PAuP/DwLj/xcG5/6ypov8XFxb/AAAA/wAAAOkDAwP/GBcW/xsaGf8ZGBf/GRgX/xsa
        Gf8bGhn/GRkY/xkZGP8ZGRj/GRkY/xkZGP8ZGRj/GRkY/xoZF/8aGRf/GRkY/xkZGP8ZGRj/GRkY/xkZ
        GP8ZGRj/GRkY/xsaGf8bGhn/GRgX/xkYF/8bGhn/GBcW/wMDA/8AAADpAAAAYgAAANEAAAD8AwMD/xYV
        FP8WFRT/AwMD/wICAv8TEhL/FhUU/xYVFP8WFRT/FhUU/xYVFP8WFRT/CxUY/wsVGP8WFRT/FhUU/xYV
        FP8WFRT/FhUU/xYVFP8TEhL/AgIC/wMDA/8WFRT/FhUU/wMDA/8AAAD8AAAA0QAAAGIAAAAAAAAALgAA
        AOQXFxb/q6mh/6upof8WFhX/ExMR/5iTiP+uqJz/raeb/62nm/+tp5v/r6ea/6Snnv8uqdD/LqnQ/6On
        n/+up5v/raeb/62nm/+tp5v/rqic/5iTiP8TExH/FhYV/6upof+rqaH/FxcW/wAAAOQAAAAuAAAAAAAA
        AAAAAAAeAAAA4BsaGf/Fwbn/xcG5/xkZGP8WFRT/r6ic/8nAsv/Hv7H/x7+x/8e/sf+9wLX/nMDD/xrD
        9/8cw/b/sMC7/8m/sP/Hv7H/x7+x/8e/sf/JwLL/r6ic/xYVFP8ZGRj/xcG5/8XBuf8bGhn/AAAA4AAA
        AB4AAAAAAAAAAAAAAB4AAADgGhoZ/8PAuP/DwLj/GRkY/xYVFP+tp5v/x7+x/8W+sP/GvrD/ur60/0bA
        5f8Ywfj/CMH+/wzB/f9ZwN3/t762/8a+sP/FvrD/xb6w/8e/sf+tp5v/FhUU/xkZGP/DwLj/w8C4/xoa
        Gf8AAADgAAAAHgAAAAAAAAAAAAAAHgAAAOAaGhn/w8C4/8PAuP8ZGRj/FhUU/62nm//Hv7H/xb6w/8a+
        sP+6vrT/RsDl/xvB9/8ewfX/EcH6/wXB//9ewNv/xL6w/8W+sP/FvrD/x7+x/62nm/8WFRT/GRkY/8PA
        uP/DwLj/GhoZ/wAAAOAAAAAeAAAAAAAAAAAAAAAeAAAA4BoaGf/DwLj/w8C4/xkZGP8WFRT/raeb/8e/
        sf/FvrD/xb6w/8W+sP+6vrX/rr65/7G+uP+Gv8r/D8H7/yXB8v+1vrf/xr6w/8W+sP/Hv7H/raeb/xYV
        FP8ZGRj/w8C4/8PAuP8aGhn/AAAA4AAAAB4AAAAAAAAAAAAAAB4AAADgGhoZ/8PAuP/DwLj/GRkY/xYV
        FP+tp5v/x7+x/8W+sP/FvrD/xb6w/8e+r//GvrD/uL62/4a/yv8Pwfv/JcHy/7W+t//GvrD/xb6w/8e/
        sf+tp5v/FhUU/xkZGP/DwLj/w8C4/xoaGf8AAADgAAAAHgAAAAAAAAAAAAAAHgAAAOAaGhn/w8C4/8PA
        uP8ZGRj/FhUU/62nm//Hv7H/xb6w/8W+sP/GvrD/t762/17A2/8lwfL/D8H7/wXB//9ewNv/xL6w/8W+
        sP/FvrD/x7+x/62nm/8WFRT/GRkY/8PAuP/DwLj/GhoZ/wAAAOAAAAAeAAAAAAAAAAAAAAAeAAAA4Boa
        Gf/DwLj/w8C4/xkZGP8WFRT/raeb/8e/sf/FvrD/xb6w/8S+sP9ewNv/BcH//w/B+/8lwfL/XsDb/7e+
        tv/GvrD/xb6w/8W+sP/Hv7H/raeb/xYVFP8ZGRj/w8C4/8PAuP8aGhn/AAAA4AAAAB4AAAAAAAAAAAAA
        AB4AAADgGhoZ/8PAuP/DwLj/GRkY/xYVFP+tp5v/x7+x/8W+sP/GvrD/tb63/yXB8v8Pwfv/hr/K/7i+
        tv/GvrD/x76v/8W+sP/FvrD/xb6w/8e/sf+tp5v/FhUU/xkZGP/DwLj/w8C4/xoaGf8AAADgAAAAHgAA
        AAAAAAAAAAAAHgAAAOAaGhn/w8C4/8PAuP8ZGRj/FhUU/62nm//Hv7H/xb6w/8a+sP+1vrf/JcHy/w/B
        +/+Gv8r/sb64/66+uf+6vrT/xb6w/8W+sP/FvrD/x7+x/62nm/8WFRT/GRkY/8PAuP/DwLj/GhoZ/wAA
        AOAAAAAeAAAAAAAAAAAAAAAeAAAA4BoaGf/DwLj/w8C4/xkZGP8WFRT/raeb/8e/sf/FvrD/xb6w/8S+
        sP9ewNv/BcH//xHB+v8ewfX/G8H3/0bA5f+6vrT/xr6w/8W+sP/Hv7H/raeb/xYVFP8ZGRj/w8C4/8PA
        uP8aGhn/AAAA4AAAAB4AAAAAAAAAAAAAAB4AAADgGhoZ/8PAuP/DwLj/GRkY/xYVFP+tp5v/x7+x/8W+
        sP/FvrD/xr6w/7e+tv9ZwN3/DMH9/wjB/v8Ywfj/RsDl/7q+tP/GvrD/xb6w/8e/sf+tp5v/FhUU/xkZ
        GP/DwLj/w8C4/xoaGf8AAADgAAAAHgAAAAAAAAAAAAAAHgAAAOAbGhn/xcG5/8XBuf8ZGRj/FhUU/6+o
        nP/JwLL/x7+x/8e/sf/Hv7H/yb+w/7DAu/8cw/b/GsP3/5zAw/+9wLX/x7+x/8e/sf/Hv7H/ycCy/6+o
        nP8WFRT/GRkY/8XBuf/Fwbn/GxoZ/wAAAOAAAAAeAAAAAAwMCw8BAQE6AAAA5BcXFv+rqaH/q6mh/xYW
        Ff8TExH/mJOI/66onP+tp5v/raeb/62nm/+up5v/o6ef/y6p0P8uqdD/pKee/6+nmv+tp5v/raeb/62n
        m/+uqJz/mJOI/xMTEf8WFhX/q6mh/6upof8XFxb/AAAA5AEBAToMDAsPAwMDwgAAAOQAAAD7AwMD/xYV
        FP8WFRT/AwMD/wICAv8TEhH/FhUT/xYVE/8WFRP/FhUT/xYVE/8WFRP/CxUY/wsVGP8WFRP/FhUT/xYV
        E/8WFRP/FhUT/xYVE/8TEhH/AgIC/wMDA/8WFRT/FhUU/wMDA/8AAAD7AAAA5AMDA8IAAAD/BAQE/xwc
        HP8eHh3/Gxsb/xsbG/8dHRz/HR0c/xsbG/8bGxv/Gxsb/xsbG/8bGxv/Gxsb/xsbG/8cHBv/HBwb/xsb
        G/8bGxv/Gxsb/xsbG/8bGxv/Gxsb/xsbG/8dHRz/HR0c/xsbG/8bGxv/Hh4d/xwcHP8EBAT/AAAA/wAA
        AP8JCQn/dXRz/8fFw//X1tP/1dPQ/9TS0P/U0tD/1NLQ/9TS0P/U0tD/1NLQ/9TS0P/U0tD/1NLQ/8/M
        yf/PzMn/1NLQ/9TS0P/U0tD/1NLQ/9TS0P/U0tD/1NLQ/9TS0P/U0tD/1dPQ/9fW0//HxcP/dXRz/wkJ
        Cf8AAAD/AwMDxwAAAPsHBwf/QkFA/6impP/q6OX/9vTx//Px7v/z8e7/8/Hu//Px7v/z8e7/8/Hu//Px
        7v/c18//vLSj/7y0o//c18//8/Hu//Px7v/z8e7/8/Hu//Px7v/z8e7/8/Hu//b08f/q6OX/qKak/0JB
        QP8HBwf/AAAA+wMDA8cMDAwYBQUFbAICAtMAAAD9CQkJ/0xLSv+xsK7/7Oro//Ty7//x7+z/8e/s//Hv
        7P/x7+z/7Onl/7uyof+soo7/rKKO/7uyof/s6eX/8e/s//Hv7P/x7+z/8e/s//Ty7//s6uj/sbCu/0xL
        Sv8JCQn/AAAA/QICAtMFBQVsDAwMGCAfHwD///8ACwsLHQUFBXsBAQHdAAAA/g4ODv9YV1b/vLu4/+/t
        6v/08u//8e/s//Hv7P/s6eX/u7Kh/6yijv+soo7/u7Kh/+zp5f/x7+z/8e/s//Ty7//v7er/vLu4/1hX
        Vv8ODg7/AAAA/gEBAd0FBQV7CwsLHf///wAgHx8AAAAAAAAAAAAZGRkAMjEwAQoKCiYEBASJAQEB5QAA
        AP8TExP/ZWRj/8bFwv/y7+z/8/Hu//Hv7P/a1s3/urKh/7qyof/a1s3/8e/s//Px7v/y7+z/xsXC/2Vk
        Y/8TExP/AAAA/wEBAeUEBASJCgoKJjIxMAEZGRkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUAB4e
        HgIJCQkvBAQElwEBAewAAAD/Ghoa/3JxcP/Pzsv/8/Hu//Px7v/s6eX/7Onl//Px7v/z8e7/z87L/3Jx
        cP8aGhr/AAAA/wEBAewEBASXCQkJLx4eHgIUFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABAPDwAXFxcECAgIOgMDA6QAAADxAQEB/yIiIf9/fn3/19XT//Ty8P/08vD/19XT/39+
        ff8iIiH/AQEB/wAAAPEDAwOkCAgIOhcXFwQQDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiGhQALCwsAExMTBwcHB0YDAwOxAAAA9gICAv8rKyr/i4qI/4uK
        iP8rKyr/AgIC/wAAAPYDAwOxBwcHRhMTEwcLCwsAiIaFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYVlYABgYGABAQEAsHBwdSAgICvAAA
        APgDAwP/AwMD/wAAAPgCAgK8BwcHUhAQEAsGBgYAWFZWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjU0AAAA
        AAAODg4SBgYGbQICAuACAgLgBgYGbQ4ODhIAAAAANjU0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAA
        AAPgAAAH+AAAH/4AAH//gAH//+AH///4H/8=
</value>
  </data>
</root>